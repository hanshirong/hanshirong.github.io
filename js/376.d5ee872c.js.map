{"version":3,"file":"js/376.d5ee872c.js","mappings":"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","sources":["webpack://cloud-music/./src/components/goTop/GoTop.vue","webpack://cloud-music/src/components/goTop/GoTop.vue","webpack://cloud-music/./src/components/goTop/GoTop.vue?197a","webpack://cloud-music/./src/components/goTop/GoTop.vue?4b29","webpack://cloud-music/./src/components/listTable/ListTable.vue","webpack://cloud-music/src/components/listTable/ListTable.vue","webpack://cloud-music/./src/components/listTable/ListTable.vue?7df3","webpack://cloud-music/./src/components/listTable/ListTable.vue?3289","webpack://cloud-music/./src/views/singerDetail/SingerDetail.vue","webpack://cloud-music/src/views/singerDetail/SingerDetail.vue","webpack://cloud-music/./src/views/singerDetail/SingerDetail.vue?8782","webpack://cloud-music/./src/views/singerDetail/SingerDetail.vue?aaac","webpack://cloud-music/./src/plugins/utils.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"GoTop\",class:_vm.isGoTopShow ? 'showBtn' : _vm.isFirstLoad ? '' : 'hideBtn',on:{\"click\":_vm.goTop}},[_c('i',{staticClass:\"iconfont icon-huidaodingbu\"})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- 使用注意：滚动的盒子必须有个固定的高度，且设有 overflow-y:scroll; 否则会出现scrollTop=0的情况 -->\r\n    <div\r\n      class=\"GoTop\"\r\n      :class=\"isGoTopShow ? 'showBtn' : isFirstLoad ? '' : 'hideBtn'\"\r\n      @click=\"goTop\"\r\n    >\r\n      <i class=\"iconfont icon-huidaodingbu\"></i>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  let obj;\r\n  \r\n  export default {\r\n    name: \"GoTop\",\r\n    props: {\r\n      // 滚动对象的选择器\r\n      scrollObj: {\r\n        type: String,\r\n        default() {\r\n          return \"\";\r\n        },\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        // 是否显示改组件\r\n        isGoTopShow: false,\r\n        // 是否是第一次加载  第一次加载组件不需要添加hideBtn类\r\n        isFirstLoad: true,\r\n      };\r\n    },\r\n    methods: {\r\n      goTop() {\r\n        this.el.scrollTo({\r\n          behavior: \"smooth\",\r\n          top: 0,\r\n        });\r\n      },\r\n    },\r\n    mounted() {\r\n      if (this.scrollObj == \"\") {\r\n        obj = document;\r\n        this.el = document.documentElement;\r\n      } else {\r\n        obj = document.querySelector(this.scrollObj);\r\n        this.el = obj;\r\n      }\r\n  \r\n      obj.onscroll = (e) => {\r\n        // console.log(e);\r\n        // console.log(obj.scrollTop);\r\n        if (this.el.scrollTop >= 500 && this.isGoTopShow == false) {\r\n          this.isGoTopShow = true;\r\n          this.isFirstLoad ? (this.isFirstLoad = false) : \"\";\r\n        } else if (this.el.scrollTop < 500 && this.isGoTopShow) {\r\n          this.isGoTopShow = false;\r\n        }\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .GoTop {\r\n    position: fixed;\r\n    background-color: #f8f8f8;\r\n    border-radius: 50%;\r\n    height: 40px;\r\n    width: 40px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),\r\n      0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n    z-index: 10000;\r\n    cursor: pointer;\r\n    bottom: -50px;\r\n    right: 40px;\r\n  }\r\n  \r\n  .showBtn {\r\n    animation: showBtn 0.7s ease;\r\n    animation-fill-mode: forwards;\r\n  }\r\n  \r\n  .hideBtn {\r\n    animation: hideBtn 0.3s ease-in;\r\n    animation-fill-mode: forwards;\r\n  }\r\n  \r\n  .GoTop i {\r\n    font-size: 24px;\r\n    color: black;\r\n  }\r\n  \r\n  .GoTop:hover {\r\n    box-shadow: 0 20px 25px -8px rgba(0, 0, 0, 0.1),\r\n      0 10px 10px -8px rgba(0, 0, 0, 0.04);\r\n  }\r\n  \r\n  @keyframes showBtn {\r\n    0% {\r\n      bottom: -50px;\r\n    }\r\n    50% {\r\n      bottom: 110px;\r\n    }\r\n    100% {\r\n      bottom: 85px;\r\n    }\r\n  }\r\n  \r\n  @keyframes hideBtn {\r\n    from {\r\n      bottom: 85px;\r\n    }\r\n    to {\r\n      bottom: -50px;\r\n    }\r\n  }\r\n  </style>\r\n  ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GoTop.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GoTop.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GoTop.vue?vue&type=template&id=07f39774&scoped=true&\"\nimport script from \"./GoTop.vue?vue&type=script&lang=js&\"\nexport * from \"./GoTop.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GoTop.vue?vue&type=style&index=0&id=07f39774&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"07f39774\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"listTableContainer\"},[_c('div',{staticClass:\"left\"},[_c('div',{staticClass:\"listCover\"},[_c('img',{attrs:{\"src\":_vm.officialListDetailItem.coverImgUrl || _vm.cover,\"alt\":\"\"},on:{\"click\":function($event){_vm.officialListDetailItem.coverImgUrl\n                ? _vm.clickPlayList(_vm.officialListDetailItem.id) : ''}}})])]),_c('div',{staticClass:\"right\"},[_c('table',_vm._l(((_vm.officialListDetailItem.tracks && _vm.officialListDetailItem.tracks.slice(0, 5)) ||\n                         (_vm.officialListDetailItem.topSongs &&\n                             (_vm.officialListDetailItem.isOpen ? _vm.officialListDetailItem.topSongs : _vm.officialListDetailItem.topSongs.slice(0, 10))) ||\n                         _vm.officialListDetailItem.songs.slice(0, 10)),function(item,index){return _c('tr',{key:index,staticClass:\"listRows\",on:{\"click\":function($event){return _vm.handleRowClick($event)},\"dblclick\":function($event){return _vm.handleRowDbClick($event,_vm.officialListDetailItem.id || item.id, index)}}},[_c('td',{staticClass:\"index\",class:index < 3 ? 'topthree' : ''},[_vm._v(_vm._s(index + 1))]),_c('td',{staticClass:\"musicName\"},[_vm._v(_vm._s(item.name))]),_c('td',{staticClass:\"singer\"},[_vm._v(_vm._s(item.ar[0].name))])])}),0),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isCheckAllShow),expression:\"isCheckAllShow\"}],staticClass:\"checkAll\",on:{\"click\":function($event){return _vm.clickCheckAll(_vm.officialListDetailItem.id)}}},[_vm._v(\" 查看全部 \"),_c('i',{staticClass:\"iconfont icon-arrow-right-bold\"})])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"listTableContainer\">\r\n        <!-- 左边图片 -->\r\n        <div class=\"left\">\r\n            <div class=\"listCover\">\r\n                <img :src=\"officialListDetailItem.coverImgUrl || cover\" alt=\"\" @click=\"officialListDetailItem.coverImgUrl\r\n                    ? clickPlayList(officialListDetailItem.id) : ''\">\r\n            </div>\r\n        </div>\r\n        <!-- 右边是列表 -->\r\n        <div class=\"right\">\r\n            <table>\r\n                <tr class=\"listRows\" v-for=\"(item, index) in\r\n                         (officialListDetailItem.tracks && officialListDetailItem.tracks.slice(0, 5)) ||\r\n                             (officialListDetailItem.topSongs &&\r\n                                 (officialListDetailItem.isOpen ? officialListDetailItem.topSongs : officialListDetailItem.topSongs.slice(0, 10))) ||\r\n                             officialListDetailItem.songs.slice(0, 10)\" :key=\"index\" @click=\"handleRowClick($event)\"\r\n                    @dblclick=\"handleRowDbClick($event,officialListDetailItem.id || item.id, index)\">\r\n                    <td class=\"index\" :class=\"index < 3 ? 'topthree' : ''\">{{ index + 1 }}</td>\r\n                    <td class=\"musicName\">{{ item.name }}</td>\r\n                    <td class=\"singer\" >{{ item.ar[0].name }}</td>\r\n                </tr>\r\n            </table>\r\n            <div class=\"checkAll\" @click=\"clickCheckAll(officialListDetailItem.id)\" v-show=\"isCheckAllShow\">\r\n                查看全部 <i class=\"iconfont icon-arrow-right-bold\"></i>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"ListTable\",\r\n    data() {\r\n        return {};\r\n    },\r\n    props: {\r\n        officialListDetailItem: {\r\n            type: Object,\r\n            default() {\r\n                return {};\r\n            },\r\n        },\r\n        // 传过来的封面\r\n        cover: {\r\n            type: String,\r\n            default() {\r\n                return \"\";\r\n            },\r\n        },\r\n        // 传过来的listId\r\n        listId: {\r\n            type: String,\r\n            default() {\r\n                return \"\";\r\n            },\r\n        },\r\n        // 是否显示查看全部按钮\r\n        isCheckAllShow: {\r\n            type: Boolean,\r\n            default() {\r\n                return true;\r\n            },\r\n        },\r\n    },\r\n    methods: {\r\n        // 点击行的回调 （选中）\r\n        handleRowClick(event) {\r\n            var paths = event.composedPath ? event.composedPath() : event.path;\r\n            this.$emit(\"handleRowClick\", paths[0]);\r\n        },\r\n        // 双击行的回调 播放\r\n        // id 为当前歌单的id index为双击歌曲在歌单的索引\r\n        handleRowDbClick(event,id, index) {\r\n            let listId = this.listId;\r\n            this.$emit(\"handleRowDbClick\", { id, index, listId });\r\n        },\r\n        // 点击查看全部的回调\r\n        // 这里传来的id是用于Rangking的\r\n        clickCheckAll(id) {\r\n            let listId = this.listId;\r\n            this.$emit(\"clickCheckAll\", { id, listId });\r\n        },\r\n        // 点击图片之后的\r\n        clickPlayList(id){\r\n          let listId = this.listId;\r\n          this.$emit(\"clickPlayList\", { id, listId });\r\n        }\r\n    },\r\n};\r\n</script>\r\n<style scoped>\r\n.listTableContainer{\r\n    display: flex;\r\n    margin: 20px 0 50px 0;\r\n}\r\n\r\n.listCover {\r\n  width: 150px;\r\n  height: 150px;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.listCover img {\r\n  width: 100%;\r\n  border-radius: 10px;\r\n}\r\n\r\n.right{\r\n  width: calc(100% - 200px);\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n}\r\n\r\n.listRows {\r\n  height: 30px;\r\n  font-size: 12px;\r\n  color: rgb(153, 153, 153);\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n}\r\n\r\n.listRows:nth-child(odd) {\r\n  background-color: #f9f9f9;\r\n}\r\n.listRows:hover {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.listRows td {\r\n  transform: scale(0.9);\r\n}\r\n\r\n.index {\r\n  text-align: center;\r\n  line-height: 28px;\r\n  width: 30px;\r\n}\r\n.topthree {\r\n  color: crimson;\r\n}\r\n\r\n.listRows .musicName {\r\n  color: rgb(31, 31, 31);\r\n  transform: translate(-5%, -5%) scale(0.9);\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  width: 80%;\r\n}\r\n\r\n.singer {\r\n  text-align: right;\r\n  position: absolute;\r\n  right: 10px;\r\n}\r\n\r\n.checkAll {\r\n  color: rgb(134, 134, 134);\r\n  font-size: 12px;\r\n  transform: scale(0.9) translateX(-5%);\r\n  width: 100px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  cursor: pointer;\r\n}\r\n\r\n.checkAll i {\r\n  font-size: 12px;\r\n}\r\n\r\n/* .selectRow {\r\n  background-color: red !important;\r\n} */\r\n\r\ntr {\r\n  cursor: pointer;\r\n}\r\n\r\n</style>\r\n\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ListTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ListTable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ListTable.vue?vue&type=template&id=073fa8cf&scoped=true&\"\nimport script from \"./ListTable.vue?vue&type=script&lang=js&\"\nexport * from \"./ListTable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ListTable.vue?vue&type=style&index=0&id=073fa8cf&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"073fa8cf\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.singerInfo.cover)?_c('div',{staticClass:\"singerDetail\"},[_c('div',{staticClass:\"listInfo\"},[_c('div',{staticClass:\"listAvatar\"},[_c('img',{attrs:{\"src\":_vm.singerInfo.cover + '?param=300y300',\"alt\":\"\"}})]),_c('div',{staticClass:\"right\"},[_c('div',{staticClass:\"title\"},[_c('div',{staticClass:\"titleContent\"},[_vm._v(_vm._s(_vm.singerInfo.name))])]),_c('div',{staticClass:\"buttons\"},[_c('div',{staticClass:\"buttonItem\",on:{\"click\":_vm.subSinger}},[_c('i',{staticClass:\"iconfont icon-xihuan\",class:_vm.isSub ? 'red' : ''}),_c('span',[_vm._v(_vm._s(_vm.isSub ? \"已收藏\" : \"收藏\"))])])]),_c('div',{staticClass:\"otherInfo\"},[_c('div',{staticClass:\"musicNum\"},[_vm._v(\"单曲数 : \"+_vm._s(_vm.singerInfo.musicSize))]),_c('div',{staticClass:\"musicNum\"},[_vm._v(\"专辑数 : \"+_vm._s(_vm.singerInfo.albumSize))]),_c('div',{staticClass:\"musicNum\"},[_vm._v(\"MV数 : \"+_vm._s(_vm.singerInfo.mvSize))])])])]),_c('div',{staticClass:\"musicList\"},[_c('el-tabs',{attrs:{\"value\":\"first\"},on:{\"tab-click\":_vm.clickTab}},[_c('el-tab-pane',{attrs:{\"label\":\"专辑\",\"name\":\"first\"}},[(_vm.topSongs.topSongs)?_c('div',{staticClass:\"topSongs\"},[_c('list-table',{attrs:{\"officialListDetailItem\":_vm.topSongs,\"isCheckAllShow\":_vm.isCheckAllShow,\"cover\":require('/src/assets/img/topSongsLogo.png'),\"listId\":this.$route.params.id.toString()},on:{\"handleRowClick\":_vm.handleRowClick,\"handleRowDbClick\":_vm.handleRowDbClick,\"clickCheckAll\":_vm.allTopSongs}},[_c('div',{staticClass:\"header\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('div',{staticClass:\"title\"},[_vm._v(\"热门50首\")])])])],1):_vm._e(),(_vm.singerAlbum.length != 0)?_c('div',{directives:[{name:\"infinite-scroll\",rawName:\"v-infinite-scroll\",value:(_vm.load),expression:\"load\"}],staticClass:\"albumItemContainer\",attrs:{\"infinite-scroll-disabled\":_vm.disabled,\"infinite-scroll-distance\":300,\"infinite-scroll-immediate\":false}},_vm._l((_vm.singerAlbum),function(item,index){return _c('div',{key:index,staticClass:\"albumItem\"},[_c('list-table',{attrs:{\"officialListDetailItem\":item.songsObj,\"cover\":item.album.blurPicUrl + '?param=300y300',\"listId\":item.album.id.toString()},on:{\"handleRowClick\":_vm.handleRowClick,\"handleRowDbClick\":_vm.handleRowDbClick,\"clickCheckAll\":_vm.clickListCardItem}},[_c('div',{staticClass:\"header\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('div',{staticClass:\"title\"},[_vm._v(_vm._s(item.album.name))])])])],1)}),0):_vm._e()]),_c('el-tab-pane',{attrs:{\"label\":\"歌手详情\",\"name\":\"third\"}},[_c('div',{staticClass:\"singerDesc\"},[_vm._v(_vm._s(_vm.singerInfo.briefDesc))])])],1)],1),_c('go-top',{attrs:{\"scrollObj\":\".singerDetail\"}})],1):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div v-if=\"singerInfo.cover\" class=\"singerDetail\">\r\n    <!-- 类名可能不太对应文件，因为html和样式都是直接搬MusicListDetail里面的 -->\r\n    <!-- 歌单信息 -->\r\n    <div class=\"listInfo\">\r\n      <!-- 歌单封面 -->\r\n      <div class=\"listAvatar\">\r\n        <img :src=\"singerInfo.cover + '?param=300y300'\" alt=\"\" />\r\n      </div>\r\n      <div class=\"right\">\r\n        <!-- 标题 -->\r\n        <div class=\"title\">\r\n          <div class=\"titleContent\">{{ singerInfo.name }}</div>\r\n        </div>\r\n        <!-- 操作按钮 -->\r\n        <div class=\"buttons\">\r\n          <div class=\"buttonItem\" @click=\"subSinger\">\r\n            <i class=\"iconfont icon-xihuan\" :class=\"isSub ? 'red' : ''\"></i>\r\n            <span>{{ isSub ? \"已收藏\" : \"收藏\" }}</span>\r\n          </div>\r\n        </div>\r\n        <!-- 歌曲列表的歌曲数量和播放量 -->\r\n        <div class=\"otherInfo\">\r\n          <div class=\"musicNum\">单曲数 : {{ singerInfo.musicSize }}</div>\r\n          <div class=\"musicNum\">专辑数 : {{ singerInfo.albumSize }}</div>\r\n          <div class=\"musicNum\">MV数 : {{ singerInfo.mvSize }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 歌曲列表 -->\r\n    <div class=\"musicList\">\r\n      <el-tabs value=\"first\" @tab-click=\"clickTab\">\r\n        <el-tab-pane label=\"专辑\" name=\"first\">\r\n          <div class=\"topSongs\" v-if=\"topSongs.topSongs\">\r\n            <!-- 热门50首没有id，将歌手id作为listid -->\r\n            <list-table\r\n              :officialListDetailItem=\"topSongs\"\r\n              @handleRowClick=\"handleRowClick\"\r\n              @handleRowDbClick=\"handleRowDbClick\"\r\n              @clickCheckAll=\"allTopSongs\"\r\n              :isCheckAllShow=\"isCheckAllShow\"\r\n              :cover=\"require('/src/assets/img/topSongsLogo.png')\"\r\n              :listId=\"this.$route.params.id.toString()\"\r\n            >\r\n              <div slot=\"header\" class=\"header\">\r\n                <div class=\"title\">热门50首</div>\r\n              </div>\r\n            </list-table>\r\n          </div>\r\n          <div\r\n            class=\"albumItemContainer\"\r\n            v-if=\"singerAlbum.length != 0\"\r\n            v-infinite-scroll=\"load\"\r\n            :infinite-scroll-disabled=\"disabled\"\r\n            :infinite-scroll-distance=\"300\"\r\n            :infinite-scroll-immediate=\"false\"\r\n          >\r\n            <div\r\n              class=\"albumItem\"\r\n              v-for=\"(item, index) in singerAlbum\"\r\n              :key=\"index\"\r\n            >\r\n              <list-table\r\n                :officialListDetailItem=\"item.songsObj\"\r\n                @handleRowClick=\"handleRowClick\"\r\n                @handleRowDbClick=\"handleRowDbClick\"\r\n                @clickCheckAll=\"clickListCardItem\"\r\n                :cover=\"item.album.blurPicUrl + '?param=300y300'\"\r\n                :listId=\"item.album.id.toString()\"\r\n              >\r\n                <div slot=\"header\" class=\"header\">\r\n                  <div class=\"title\">{{ item.album.name }}</div>\r\n                </div>\r\n              </list-table>\r\n            </div>\r\n          </div>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"歌手详情\" name=\"third\">\r\n          <div class=\"singerDesc\">{{ singerInfo.briefDesc }}</div>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </div>\r\n    <go-top scrollObj=\".singerDetail\"></go-top>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { handleMusicTime } from \"plugins/utils\";\r\nimport ListTable from \"components/listTable/ListTable.vue\";\r\nimport GoTop from \"components/goTop/GoTop.vue\";\r\n\r\n// 记录上一首播放的音乐信息  用于清空小喇叭和红字样式\r\nlet currentRowInfo = {};\r\n// 定时器名称\r\nlet timer;\r\n\r\nexport default {\r\n  components: { ListTable, GoTop },\r\n  name: \"SingerDetail\",\r\n  data() {\r\n    return {\r\n      singerInfo: {},\r\n      // 热门50首\r\n      topSongs: {},\r\n      // 歌手专辑\r\n      singerAlbum: [],\r\n      // 专辑页数\r\n      albumPage: 1,\r\n      disabled: true,\r\n      isAlbumMore: false,\r\n      // 是否显示topSong的查看全部按钮\r\n      isCheckAllShow: true,\r\n      // 歌手mv数据\r\n      singerMvInfo: { mvs: [], hasMore: false },\r\n      // mv页数\r\n      videoPage: 1,\r\n      // 是否是双击操作\r\n      isDbc: false,\r\n      // 是否收藏了当前歌手\r\n      isSub: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // 请求\r\n    // 请求歌手详情\r\n    async getSingerInfo() {\r\n      let res = await this.$request(\"/artist/detail\", {\r\n        id: this.$route.params.id,\r\n      });\r\n      // console.log(res);\r\n      this.singerInfo = res.data.data.artist;\r\n    },\r\n    // 请求歌手热门50首歌曲\r\n    async getSingerTopSongs() {\r\n      let res = await this.$request(\"/artist/top/song\", {\r\n        id: this.$route.params.id,\r\n      });\r\n      // console.log(res);\r\n      let topSongs = res.data.songs;\r\n      // 处理歌单中歌曲的时间\r\n      topSongs.forEach((item, index) => {\r\n        topSongs[index].dt = handleMusicTime(item.dt);\r\n      });\r\n      // topSongs改成对象，并向里面添加isOpen属性，用于点击查看列表所有歌曲\r\n      this.topSongs = { topSongs, isOpen: false };\r\n    },\r\n    // 请求专辑列表 再用专辑id查询专辑信息\r\n    async getAlbumInfo() {\r\n      let res = await this.$request(\"/artist/album\", {\r\n        id: this.$route.params.id,\r\n        limit: 20,\r\n        offset: (this.albumPage - 1) * 20,\r\n      });\r\n      this.isAlbumMore = res.data.more;\r\n      res = res.data.hotAlbums;\r\n      await res.forEach((item) => {\r\n        this.getAlbumDetail(item.id);\r\n      });\r\n      // console.log(\"拿到了专辑数据并保存\", this.singerAlbum);\r\n    },\r\n    // 请求专辑详情信息\r\n    async getAlbumDetail(id) {\r\n      let res = await this.$request(\"/album\", { id });\r\n      // 将数组songs再保存一个对象格式，方便组件使用\r\n      res = res.data;\r\n      let songs = res.songs;\r\n      // 处理歌单中歌曲的时间\r\n      songs.forEach((item, index) => {\r\n        songs[index].dt = handleMusicTime(item.dt);\r\n      });\r\n      res.songsObj = { songs };\r\n      this.singerAlbum.push(res);\r\n    },\r\n    // 请求歌手 mv 数据\r\n    async getSingerMv() {\r\n      // 这个接口没有offset 参数\r\n      let res = await this.$request(\"/artist/mv\", {\r\n        id: this.$route.params.id,\r\n        limit: 20 * this.videoPage,\r\n      });\r\n      console.log(res);\r\n      this.singerMvInfo = res.data;\r\n    },\r\n    // 请求收藏的歌手列表\r\n    async getSubSingerList() {\r\n      let timestamp = Date.parse(new Date());\r\n      let res = await this.$request(\"/artist/sublist\", {\r\n        limit: 1000,\r\n        timestamp,\r\n      });\r\n      console.log(res.data.data);\r\n      this.$store.commit(\"updateSubSingerList\", res.data.data);\r\n    },\r\n\r\n    // 事件函数\r\n    // 行点击事件的回调\r\n    handleRowClick(event) {\r\n      // console.log(event);\r\n      if (document.querySelector(\".selectRow\")) {\r\n        document.querySelector(\".selectRow\").classList.remove(\"selectRow\");\r\n      }\r\n      event.classList.add(\"selectRow\");\r\n    },\r\n\r\n    // 行双击事件的回调\r\n    // 这里的 id是歌曲id   index 双击歌曲在歌单中的索引   listId是歌单id\r\n    handleRowDbClick({ id, index, listId }) {\r\n      // console.log(id);\r\n      // console.log(index);\r\n      // console.log(listId);\r\n      this.isDbc = true;\r\n\r\n      this.handleViewDOM(id, listId, index);\r\n\r\n      // 播放的逻辑操作\r\n      if (listId != this.$route.params.id) {\r\n        let musicListIndex = this.singerAlbum.findIndex(\r\n          (item) => item.album.id == listId\r\n        );\r\n        // console.log(musicListIndex);\r\n        this.$store.commit(\"updateMusicId\", id);\r\n        // 如果歌单发生变化,则提交歌单到vuex\r\n        if (listId != this.$store.state.musicListId) {\r\n          // 将歌单传到vuex\r\n          this.$store.commit(\"updateMusicList\", {\r\n            musicList: this.singerAlbum[musicListIndex].songs,\r\n            musicListId: listId,\r\n          });\r\n        }\r\n      } else {\r\n        this.$store.commit(\"updateMusicId\", id);\r\n        // 如果歌单发生变化,则提交歌单到vuex\r\n        // 如果是topsong 就拿歌手的id 当作listid 作为唯一辨识\r\n        if (this.$route.params.id != this.$store.state.musicListId) {\r\n          // 将歌单传到vuex\r\n          this.$store.commit(\"updateMusicList\", {\r\n            musicList: this.topSongs.topSongs,\r\n            musicListId: this.$route.params.id,\r\n          });\r\n        }\r\n      }\r\n      // console.log(123);\r\n    },\r\n\r\n    handleViewDOM(id, listId, index) {\r\n      // 先清空之前的样式\r\n      if (currentRowInfo.listId) {\r\n        this.cleanStyle(currentRowInfo.i, currentRowInfo.listId);\r\n      }\r\n      let tables = document.querySelectorAll(\"table\");\r\n      // 这里的 id是歌曲id   index 双击歌曲在歌单中的索引   listId是歌单id\r\n      let i = -1;\r\n      // 根据listId找歌单索引 listIndex\r\n      let listIndex = -1;\r\n      // top50的情况\r\n      if (listId == this.$route.params.id) {\r\n        listIndex = 0;\r\n      } // 专辑的情况\r\n      else {\r\n        listIndex = this.singerAlbum.findIndex(\r\n          (item) => item.album.id == listId\r\n        );\r\n        console.log(listIndex, \"listIndex\");\r\n        // 如果没有，说明目前还没有渲染或者还没有请求\r\n        if (listIndex == -1) {\r\n          console.log(\"can not find listIndex\");\r\n          return;\r\n        }\r\n        listIndex += 1;\r\n      }\r\n\r\n      // 找歌曲在歌单中的索引 i\r\n      if (index == undefined) {\r\n        // 分top50和专辑两种情况\r\n        if (listIndex == 0) {\r\n          i = this.topSongs.topSongs.findIndex((item) => item.id == id);\r\n        } else {\r\n          i = this.singerAlbum[listIndex - 1].songs.findIndex(\r\n            (item) => item.id == id\r\n          );\r\n        }\r\n      } else {\r\n        i = index;\r\n      }\r\n\r\n      console.log(i, \"i\");\r\n      console.log(index, \"index\");\r\n      // 渲染\r\n      if (tables[listIndex] && tables[listIndex].children[i]) {\r\n        let currentRow = tables[listIndex].children[i];\r\n        // console.log(currentRow);\r\n        currentRow.querySelector(\".index\").innerHTML =\r\n          \"<i class='iconfont icon-yinle' style='color:#ff4e4e'></i>\";\r\n        // currentRow.querySelector(\".musicName\").style.color = \"#ff4e4e\";\r\n\r\n        // 保存当前数据 供下次清空样式使用\r\n        currentRowInfo.i = i;\r\n        // 因为歌单的顺序可能会改变，所以不要直接保存索引\r\n        currentRowInfo.listId = listId;\r\n        currentRowInfo.singerId = this.$route.params.id;\r\n        // 将currentRowInfo上传至vuex 供下次重新进入页面使用\r\n        this.$store.commit(\"updateCurrentRowInfo\", currentRowInfo);\r\n      }\r\n    },\r\n\r\n    cleanStyle(i, listId) {\r\n      let tables = document.querySelectorAll(\"table\");\r\n      // 找到歌单的索引\r\n      let listIndex = -1;\r\n      if (listId == this.$route.params.id) {\r\n        listIndex = 0;\r\n      } // 专辑的情况\r\n      else {\r\n        listIndex = this.singerAlbum.findIndex(\r\n          (item) => item.album.id == listId\r\n        );\r\n        // 如果没有，说明目前还没有渲染或者还没有请求\r\n        if (listIndex == -1) {\r\n          console.log(\"can not find listIndex\");\r\n          return;\r\n        }\r\n        listIndex += 1;\r\n      }\r\n      // console.log(\"执行了清空\");\r\n      // console.log(\"listIndex:\", listIndex);\r\n      // console.log(\"i:\", i);\r\n      if (tables[listIndex] && tables[listIndex].children[i]) {\r\n        let lastRow = tables[listIndex].children[i];\r\n        lastRow.querySelector(\".index\").innerHTML = i + 1;\r\n        // lastRow.querySelector(\".musicName\").style.color = \"#1f1f1f\";\r\n      }\r\n    },\r\n\r\n    // 点击榜单进入歌单详情界面\r\n    clickListCardItem({ listId }) {\r\n      console.log(listId);\r\n      this.$router.push({ name: \"album\", params: { id: listId } });\r\n      // this.$router.push({ name: \"musicListDetail\", params: { id } });\r\n      // console.log(123);\r\n    },\r\n    // 查看热门50首全部歌曲\r\n    allTopSongs() {\r\n      this.topSongs.isOpen = true;\r\n      this.isCheckAllShow = false;\r\n      // 查看全部后再次渲染样式\r\n      setTimeout(() => {\r\n        if (\r\n          this.$store.state.currentRowInfo.singerId == this.$route.params.id\r\n        ) {\r\n          this.handleViewDOM(\r\n            this.$store.state.musicId,\r\n            this.$store.state.musicListId\r\n          );\r\n        }\r\n      }, 500);\r\n    },\r\n    // 专辑上拉触底加载\r\n    load() {\r\n      // console.log(\"上拉触底\");\r\n      this.disabled = true;\r\n      this.albumPage += 1;\r\n      this.getAlbumInfo();\r\n    },\r\n\r\n    // mv上拉加载\r\n    bottomLoad() {\r\n      if (this.singerMvInfo.hasMore == true) {\r\n        this.videoPage += 1;\r\n        this.getSingerMv();\r\n      }\r\n    },\r\n    // 点击视频卡片进入视频详情\r\n    goToVideoDetail({ id }) {\r\n      if (!this.$store.state.isLogin) {\r\n        this.$message.error(\"登录后才能观看MV哦!\");\r\n        return;\r\n      }\r\n      // console.log(id);\r\n      this.$router.push({ name: \"videoDetail\", params: { id, type: \"mv\" } });\r\n    },\r\n    // 点击el-tab-pane的回调\r\n    clickTab(e) {\r\n      console.log(e.index);\r\n      if (e.index == 1 && this.singerMvInfo.mvs.length == 0) {\r\n        this.getSingerMv();\r\n      }\r\n    },\r\n    // 判断用户是否收藏了该歌手\r\n    getIsSub() {\r\n      this.isSub = this.$store.state.subSingerList.find(\r\n        (item) => item.id == this.$route.params.id\r\n      );\r\n    },\r\n    // 点击subSinger按钮的回调\r\n    async subSinger() {\r\n      if (!this.$store.state.isLogin) {\r\n        this.$message.error(\"请先登录!\");\r\n        return;\r\n      }\r\n      this.isSub = !this.isSub;\r\n      // 发送请求\r\n      await this.$request(\"/artist/sub\", {\r\n        id: this.$route.params.id,\r\n        t: this.isSub ? 1 : 0,\r\n      });\r\n      // 每次进行修改操作后，都需要更新vuex里面的收藏list\r\n      this.getSubSingerList();\r\n    },\r\n  },\r\n  created() {\r\n    this.getSingerInfo();\r\n  },\r\n  watch: {\r\n    singerAlbum() {\r\n      if (this.singerAlbum.length != 0 && this.isAlbumMore) {\r\n        this.disabled = false;\r\n      } else {\r\n        this.disabled = true;\r\n      }\r\n    },\r\n    // 音乐加载完成后重置isDbc\r\n    \"$store.state.isMusicLoad\"(isMusicLoad) {\r\n      if (!isMusicLoad) {\r\n        this.isDbc = false;\r\n      }\r\n    },\r\n\r\n    \"$store.state.musicId\"(current, last) {\r\n      // 判断是否是双击，如果是双击则不用调用handleView\r\n      if (!this.isDbc) {\r\n        // id,listId\r\n        this.handleViewDOM(\r\n          this.$store.state.musicId,\r\n          this.$store.state.musicListId\r\n        );\r\n      }\r\n    },\r\n\r\n    // 监听singerAlbum的变化\r\n    singerAlbum() {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        if (\r\n          this.$store.state.currentRowInfo.singerId == this.$route.params.id\r\n        ) {\r\n          this.handleViewDOM(\r\n            this.$store.state.musicId,\r\n            this.$store.state.musicListId\r\n          );\r\n        }\r\n      }, 500);\r\n    },\r\n  },\r\n  async mounted() {\r\n    await this.getSingerTopSongs();\r\n    await this.getAlbumInfo();\r\n    this.$nextTick(() => {\r\n      if (this.$store.state.currentRowInfo.singerId == this.$route.params.id) {\r\n        this.handleViewDOM(\r\n          this.$store.state.musicId,\r\n          this.$store.state.musicListId\r\n        );\r\n      }\r\n    });\r\n    if (this.$store.state.isLogin) {\r\n      if (this.$store.state.subSingerList == null) {\r\n        await this.getSubSingerList();\r\n      }\r\n      this.getIsSub();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.singerDetail {\r\n  overflow-y: scroll;\r\n}\r\n\r\n.listInfo {\r\n  display: flex;\r\n  padding: 25px 10px;\r\n}\r\n\r\n.listAvatar {\r\n  width: 150px;\r\n  height: 150px;\r\n  overflow: hidden;\r\n  border-radius: 10px;\r\n  margin-right: 15px;\r\n}\r\n\r\n.listAvatar img {\r\n  width: 100%;\r\n}\r\n\r\n.right {\r\n  margin-top: 10px;\r\n  width: calc(100% - 200px);\r\n}\r\n\r\n.title {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.titleTag {\r\n  font-size: 12px;\r\n  color: #ec4141;\r\n  border: 1px solid #ec4141;\r\n  padding: 1px 2px;\r\n  border-radius: 2px;\r\n  margin-right: 5px;\r\n  transform: scale(0.8);\r\n}\r\n\r\n.titleContent {\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #373737;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  width: 90%;\r\n}\r\n\r\n.buttons {\r\n  margin: 15px 0 0 -5px;\r\n  display: flex;\r\n}\r\n\r\n.buttonItem {\r\n  font-size: 12px;\r\n  padding: 8px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 20px;\r\n  transform: scale(0.9);\r\n}\r\n\r\n.buttonItem i {\r\n  font-size: 12px;\r\n  margin-right: 3px;\r\n  transform: scale(0.9);\r\n}\r\n\r\n.playAll {\r\n  background-color: #ec4141;\r\n  color: white;\r\n}\r\n\r\n.otherInfo {\r\n  margin: 15px 0 0 -30px;\r\n  display: flex;\r\n  font-size: 12px;\r\n  transform: scale(0.9);\r\n}\r\n\r\n.musicNum {\r\n  margin-right: 13px;\r\n}\r\n\r\n.musicList {\r\n  margin: 0 10px;\r\n}\r\n\r\n.title {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: black;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.singerDesc {\r\n  font-size: 12px;\r\n  color: #373737;\r\n  line-height: 25px;\r\n  letter-spacing: 0.5px;\r\n  text-indent: 2em;\r\n}\r\n\r\n.red {\r\n  color: #ec4141;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SingerDetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SingerDetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SingerDetail.vue?vue&type=template&id=af67d196&scoped=true&\"\nimport script from \"./SingerDetail.vue?vue&type=script&lang=js&\"\nexport * from \"./SingerDetail.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SingerDetail.vue?vue&type=style&index=0&id=af67d196&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"af67d196\",\n  null\n  \n)\n\nexport default component.exports","\r\n// 处理音乐时长的时间\r\nexport function handleMusicTime(time) {\r\n    // 如果超过了100000 基本都是毫秒为单位的了 先转成秒的\r\n    time = parseInt(time);\r\n    if (time > 10000) {\r\n      time = Math.floor(time / 1000);\r\n    } else {\r\n      time = Math.floor(time);\r\n    }\r\n    let m = Math.floor(time / 60);\r\n    let s = Math.floor(time % 60);\r\n    m = m < 10 ? '0' + m : m;\r\n    s = s < 10 ? '0' + s : s;\r\n    return m + ':' + s;\r\n}\r\n\r\n// 生成当前时间戳\r\nexport function getTimeStamp() {\r\n  return Date.now();\r\n}\r\n\r\n// 将播放时长还原为秒数\r\nexport function returnSecond(time) {\r\n  time = time.split(':');\r\n  let m = parseInt(time[0]);\r\n  let s = parseInt(time[1]);\r\n  return m * 60 + s;\r\n}\r\n\r\n// 格式化时间\r\nexport function formatDate(date, fmt) {\r\n  // 1.获取年份\r\n  // y+ 1个或者多个y  yyyy:2021\r\n  // y* 0个或者多个y\r\n  // y? 0个或者1个y\r\n  if (/(y+)/.test(fmt)) {\r\n    // RegExp.$1 指的是与正则表达式匹配的第一个子匹配\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n  }\r\n\r\n  // 2.获取月日等\r\n  let o = {\r\n    'M+': date.getMonth() + 1,\r\n    'd+': date.getDate(),\r\n    'h+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds(),\r\n  };\r\n  for (let k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      let str = o[k] + '';\r\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\r\n    }\r\n  }\r\n  return fmt;\r\n}\r\n\r\n// 处理大于1w的数字\r\nexport function handleNum(num) {\r\n  if (num > 10000) {\r\n    num = (num / 10000).toFixed(1);\r\n    return num + '万';\r\n  } else {\r\n    return num;\r\n  }\r\n}\r\n\r\n// 不足两位补足两位 04:05:09\r\nfunction padLeftZero(str) {\r\n  // str=4 -> 004 截取 1 位 -> 04\r\n  return ('00' + str).substr(str.length);\r\n}"],"names":["render","_vm","this","_c","_self","staticClass","class","isGoTopShow","isFirstLoad","on","goTop","staticRenderFns","obj","name","props","scrollObj","type","String","default","data","methods","el","scrollTo","behavior","top","mounted","document","documentElement","querySelector","onscroll","e","scrollTop","component","attrs","officialListDetailItem","coverImgUrl","cover","$event","clickPlayList","id","_l","tracks","slice","topSongs","isOpen","songs","item","index","key","handleRowClick","handleRowDbClick","_v","_s","ar","directives","rawName","value","isCheckAllShow","expression","clickCheckAll","Object","listId","Boolean","event","paths","composedPath","path","$emit","singerInfo","subSinger","isSub","musicSize","albumSize","mvSize","clickTab","require","$route","params","toString","allTopSongs","slot","_e","singerAlbum","length","load","disabled","songsObj","album","blurPicUrl","clickListCardItem","briefDesc","timer","currentRowInfo","components","ListTable","GoTop","albumPage","isAlbumMore","singerMvInfo","mvs","hasMore","videoPage","isDbc","res","$request","artist","forEach","dt","handleMusicTime","limit","offset","more","hotAlbums","getAlbumDetail","push","console","log","timestamp","Date","parse","$store","commit","classList","remove","add","handleViewDOM","musicListIndex","findIndex","state","musicListId","musicList","cleanStyle","i","tables","querySelectorAll","listIndex","undefined","children","currentRow","innerHTML","singerId","lastRow","$router","setTimeout","musicId","getAlbumInfo","bottomLoad","getSingerMv","goToVideoDetail","isLogin","$message","error","getIsSub","subSingerList","find","t","getSubSingerList","created","getSingerInfo","watch","isMusicLoad","current","last","clearTimeout","getSingerTopSongs","$nextTick","time","parseInt","Math","floor","m","s","getTimeStamp","now","returnSecond","split","formatDate","date","fmt","test","replace","RegExp","$1","getFullYear","substr","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","handleNum","num","toFixed"],"sourceRoot":""}