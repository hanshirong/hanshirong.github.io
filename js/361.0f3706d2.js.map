{"version":3,"file":"js/361.0f3706d2.js","mappings":"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","sources":["webpack://cloud-music/./src/views/recommendMusic/RecommendMusic.vue","webpack://cloud-music/src/views/recommendMusic/RecommendMusic.vue","webpack://cloud-music/./src/views/recommendMusic/RecommendMusic.vue?40d3","webpack://cloud-music/./src/views/recommendMusic/RecommendMusic.vue?6d49","webpack://cloud-music/./src/plugins/utils.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"recommendMusic\"},[_c('div',{staticClass:\"recommendInfo\"},[_vm._m(0),_c('div',{staticClass:\"buttons\"},[_c('div',{staticClass:\"buttonItem playAll\",on:{\"click\":_vm.playAll}},[_c('i',{staticClass:\"iconfont icon-songlist-01\"}),_c('span',[_vm._v(\"播放全部\")])])])]),(_vm.recommendMusic.length != 0)?_c('div',[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.recommendMusic,\"size\":\"mini\",\"highlight-current-row\":\"\",\"stripe\":\"\",\"lazy\":\"\"},on:{\"row-dblclick\":_vm.clickRow}},[_c('el-table-column',{attrs:{\"label\":\"\",\"width\":\"30\",\"type\":\"index\",\"index\":_vm.handleIndex}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"音乐标题\",\"min-width\":\"350\"}}),_c('el-table-column',{attrs:{\"prop\":\"ar[0].name\",\"label\":\"歌手\",\"min-width\":\"120\"}}),_c('el-table-column',{attrs:{\"prop\":\"al.name\",\"label\":\"专辑\",\"min-width\":\"170\"}}),_c('el-table-column',{attrs:{\"prop\":\"dt\",\"label\":\"时长\",\"min-width\":\"100\"}})],1),_c('div',{staticClass:\"placeholder\"})],1):_vm._e()])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"title\"},[_c('div',{staticClass:\"cover\"},[_c('img',{attrs:{\"src\":require(\"assets/img/recommendMusic.png\"),\"alt\":\"\"}})]),_c('div',{staticClass:\"titleInfo\"},[_c('div',{staticClass:\"infoTop\"},[_vm._v(\"每日歌曲推荐\")]),_c('div',{staticClass:\"infoBottom\"},[_vm._v(\"根据你的音乐口味生成，每天6:00更新\")])])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"recommendMusic\">\r\n      <!-- 每日推荐歌曲信息 -->\r\n      <div class=\"recommendInfo\">\r\n        <div class=\"title\">\r\n          <div class=\"cover\">\r\n            <img src=\"~assets/img/recommendMusic.png\" alt=\"\" />\r\n          </div>\r\n          <div class=\"titleInfo\">\r\n            <div class=\"infoTop\">每日歌曲推荐</div>\r\n            <div class=\"infoBottom\">根据你的音乐口味生成，每天6:00更新</div>\r\n          </div>\r\n        </div>\r\n        <!-- 操作按钮 -->\r\n        <div class=\"buttons\">\r\n          <div class=\"buttonItem playAll\" @click=\"playAll\">\r\n            <i class=\"iconfont icon-songlist-01\"></i>\r\n            <span>播放全部</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 歌曲列表 -->\r\n      <div v-if=\"recommendMusic.length != 0\">\r\n        <!-- 表格 -->\r\n        <el-table\r\n          :data=\"recommendMusic\"\r\n          size=\"mini\"\r\n          style=\"width: 100%\"\r\n          @row-dblclick=\"clickRow\"\r\n          highlight-current-row\r\n          stripe\r\n          lazy\r\n        >\r\n          <el-table-column label=\"\" width=\"30\" type=\"index\" :index=\"handleIndex\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"name\" label=\"音乐标题\" min-width=\"350\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"ar[0].name\" label=\"歌手\" min-width=\"120\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"al.name\" label=\"专辑\" min-width=\"170\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"dt\" label=\"时长\" min-width=\"100\">\r\n          </el-table-column>\r\n        </el-table>\r\n        <div class=\"placeholder\"></div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { handleMusicTime } from \"plugins/utils\";\r\n  \r\n  export default {\r\n    name: \"RecommendMusic\",\r\n    data() {\r\n      return {\r\n        // 每日推荐歌曲列表\r\n        recommendMusic: [],\r\n        //   每日推荐id （自己起的，用于上传vuex当musicListId，只是作为一个唯一标识）\r\n        recommendMusicListId: \"recommendMusic\",\r\n      };\r\n    },\r\n    methods: {\r\n      //   请求\r\n      // 获取每日推荐歌曲\r\n      async getRecommendMusic() {\r\n        let res = await this.$request(\"/recommend/songs\");\r\n        this.recommendMusic = res.data.data.dailySongs;\r\n        // 处理时间\r\n        this.recommendMusic.forEach((item, index) => {\r\n          this.recommendMusic[index].dt = handleMusicTime(item.dt);\r\n        });\r\n      },\r\n  \r\n      // 事件\r\n      // 点击播放全部按钮的回调\r\n      playAll() {\r\n        console.log(this.recommendMusic);\r\n        this.$store.commit(\"updateMusicId\", this.recommendMusic[0].id);\r\n        this.$store.commit(\"updateMusicList\", {\r\n          musicList: this.recommendMusic,\r\n          musicListId: this.recommendMusicListId,\r\n        });\r\n      },\r\n      // 处理table索引\r\n      handleIndex(index) {\r\n        // console.log(index);\r\n        index += 1;\r\n        if (index < 10) {\r\n          return \"0\" + index;\r\n        } else {\r\n          return index;\r\n        }\r\n      },\r\n      // 双击table的row的回调\r\n      // 播放音乐的逻辑操作\r\n      async clickRow(row) {\r\n        // console.log(row);\r\n        // 将musicId提交到vuex中 供bottomControl查询歌曲url和其它操作\r\n        this.$store.commit(\"updateMusicId\", row.id);\r\n        // 如果歌单发生变化,则提交歌单到vuex\r\n        if (this.recommendMusicListId != this.$store.state.musicListId) {\r\n          // 将歌单传到vuex\r\n          this.$store.commit(\"updateMusicList\", {\r\n            musicList: this.recommendMusic,\r\n            musicListId: this.recommendMusicListId,\r\n          });\r\n        }\r\n      },\r\n  \r\n      // 操作 DOM\r\n      handleDOM(current, last) {\r\n        if (document.querySelector(\".recommendMusic\")) {\r\n          let tableRows = document\r\n            .querySelector(\".recommendMusic\")\r\n            .querySelectorAll(\".el-table__row\");\r\n          // 遍历当前musicList 找到当前播放的index的行进行渲染\r\n          // console.log(tableRows);\r\n          let index = this.recommendMusic.findIndex((item) => item.id == current);\r\n          // console.log(index);\r\n          if (index != -1) {\r\n            // 直接修改dom样式的颜色无效\r\n            // 通过引入全局样式解决\r\n            // 将正在播放的音乐前面的索引换成小喇叭\r\n            tableRows[index].children[0].querySelector(\r\n              \".cell\"\r\n            ).innerHTML = `<div><i class=\"iconfont icon-yinle\"></i></div>`;\r\n            tableRows[index].children[0]\r\n              .querySelector(\".iconfont\")\r\n              .classList.add(\"currentRow\");\r\n            tableRows[index].children[1]\r\n              .querySelector(\".cell\")\r\n              .classList.add(\"currentRow\");\r\n          }\r\n          // 清除上一首的样式\r\n          if (last != -1) {\r\n            let lastIndex = this.recommendMusic.findIndex(\r\n              (item) => item.id == last\r\n            );\r\n            if (lastIndex != -1) {\r\n              // 将上一个播放的dom的小喇叭换回索引\r\n              tableRows[lastIndex].children[0].querySelector(\r\n                \".cell\"\r\n              ).innerHTML = `<div>${\r\n                lastIndex + 1 < 10 ? \"0\" + (lastIndex + 1) : lastIndex + 1\r\n              }</div>`;\r\n  \r\n              // 将上一首的类名删掉  小喇叭的html已经被替换了，不需要再还原\r\n              tableRows[lastIndex].children[1]\r\n                .querySelector(\".cell\")\r\n                .classList.remove(\"currentRow\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n  \r\n    },\r\n    created() {\r\n      if (!this.$store.state.isLogin) {\r\n        this.$message.error(\"只有登录后才能进入每日推荐页面哦!\");\r\n        this.$router.replace(\"/discover\");\r\n      }\r\n    },\r\n    async mounted() {\r\n      if (this.$store.state.isLogin) {\r\n        await this.getRecommendMusic();\r\n        // 判断是否和上一次打开的歌单相同\r\n        if (this.recommendMusicListId == this.$store.state.musicListId) {\r\n          this.handleDOM(this.$store.state.musicId);\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      \"$store.state.musicId\"(current, last) {\r\n        this.handleDOM(current, last);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .recommendInfo {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .title {\r\n    display: flex;\r\n  }\r\n  \r\n  .cover {\r\n    width: 90px;\r\n  }\r\n  \r\n  .cover img {\r\n    width: 100%;\r\n  }\r\n  \r\n  .titleInfo {\r\n    padding: 15px 10px;\r\n  }\r\n  \r\n  .infoTop {\r\n    font-size: 19px;\r\n    font-weight: bold;\r\n    color: black;\r\n    margin: 3px 0;\r\n  }\r\n  \r\n  .infoBottom {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .buttons {\r\n    margin: 8px 0 0 3px;\r\n    display: flex;\r\n  }\r\n  \r\n  .buttonItem {\r\n    font-size: 12px;\r\n    padding: 8px 15px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 20px;\r\n    transform: scale(0.9);\r\n  }\r\n  \r\n  .buttonItem i {\r\n    font-size: 12px;\r\n    margin-right: 3px;\r\n    transform: scale(0.9);\r\n  }\r\n  \r\n  .playAll {\r\n    background-color: #ec4141;\r\n    color: white;\r\n  }\r\n  \r\n  .placeholder {\r\n    width: 100%;\r\n    height: 50px;\r\n  }\r\n\r\n  </style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RecommendMusic.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RecommendMusic.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RecommendMusic.vue?vue&type=template&id=31c47178&scoped=true&\"\nimport script from \"./RecommendMusic.vue?vue&type=script&lang=js&\"\nexport * from \"./RecommendMusic.vue?vue&type=script&lang=js&\"\nimport style0 from \"./RecommendMusic.vue?vue&type=style&index=0&id=31c47178&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"31c47178\",\n  null\n  \n)\n\nexport default component.exports","\r\n// 处理音乐时长的时间\r\nexport function handleMusicTime(time) {\r\n    // 如果超过了100000 基本都是毫秒为单位的了 先转成秒的\r\n    time = parseInt(time);\r\n    if (time > 10000) {\r\n      time = Math.floor(time / 1000);\r\n    } else {\r\n      time = Math.floor(time);\r\n    }\r\n    let m = Math.floor(time / 60);\r\n    let s = Math.floor(time % 60);\r\n    m = m < 10 ? '0' + m : m;\r\n    s = s < 10 ? '0' + s : s;\r\n    return m + ':' + s;\r\n}\r\n\r\n// 生成当前时间戳\r\nexport function getTimeStamp() {\r\n  return Date.now();\r\n}\r\n\r\n// 将播放时长还原为秒数\r\nexport function returnSecond(time) {\r\n  time = time.split(':');\r\n  let m = parseInt(time[0]);\r\n  let s = parseInt(time[1]);\r\n  return m * 60 + s;\r\n}\r\n\r\n// 格式化时间\r\nexport function formatDate(date, fmt) {\r\n  // 1.获取年份\r\n  // y+ 1个或者多个y  yyyy:2021\r\n  // y* 0个或者多个y\r\n  // y? 0个或者1个y\r\n  if (/(y+)/.test(fmt)) {\r\n    // RegExp.$1 指的是与正则表达式匹配的第一个子匹配\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n  }\r\n\r\n  // 2.获取月日等\r\n  let o = {\r\n    'M+': date.getMonth() + 1,\r\n    'd+': date.getDate(),\r\n    'h+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds(),\r\n  };\r\n  for (let k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      let str = o[k] + '';\r\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\r\n    }\r\n  }\r\n  return fmt;\r\n}\r\n\r\n// 处理大于1w的数字\r\nexport function handleNum(num) {\r\n  if (num > 10000) {\r\n    num = (num / 10000).toFixed(1);\r\n    return num + '万';\r\n  } else {\r\n    return num;\r\n  }\r\n}\r\n\r\n// 不足两位补足两位 04:05:09\r\nfunction padLeftZero(str) {\r\n  // str=4 -> 004 截取 1 位 -> 04\r\n  return ('00' + str).substr(str.length);\r\n}"],"names":["render","_vm","this","_c","_self","staticClass","_m","on","playAll","_v","recommendMusic","length","staticStyle","attrs","clickRow","handleIndex","_e","staticRenderFns","require","name","data","recommendMusicListId","methods","res","$request","dailySongs","forEach","item","index","dt","handleMusicTime","console","log","$store","commit","id","musicList","musicListId","row","state","handleDOM","current","last","document","querySelector","tableRows","querySelectorAll","findIndex","children","innerHTML","classList","add","lastIndex","remove","created","isLogin","$message","error","$router","replace","getRecommendMusic","musicId","watch","component","time","parseInt","Math","floor","m","s","getTimeStamp","Date","now","returnSecond","split","formatDate","date","fmt","test","RegExp","$1","getFullYear","substr","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","handleNum","num","toFixed"],"sourceRoot":""}